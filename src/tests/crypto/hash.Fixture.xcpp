// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
#import hyperledger.crypto.hash
namespace tests::crypto::hash {
  namespace fixture {
    class Fixture;
    namespace library = ::hyperledger::crypto::hash;
  }
  using fixture::Fixture;
}
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
struct tests::crypto::hash::fixture::Fixture : public cppunit::test::Fixture {
  auto test_Algorithm() -> void;
  auto test_Function() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import hyperledger.crypto.hash.Algorithm
#import hyperledger.crypto.hash.Function
namespace tests::crypto::hash::fixture {
  auto Fixture::test_Algorithm() -> void {
#warning WRITETHIS auto Fixture::test_Algorithm() -> void
  }
  auto Fixture::test_Function() -> void {
#warning WRITETHIS auto Fixture::test_Function() -> void
  }
}
#import rigging.suite.io
auto tests::crypto::hash::fixture::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"hash"};
  series << call("Algorithm", &Fixture::test_Algorithm)
         << call("Function", &Fixture::test_Function)
         << END;
  return finalize(series);
}
#endiv
