# This is a GNU -*- Makefile -*- fragment that is included by Automake
# Copyright 2019, Oath Inc.
# Licensed under the terms of the Apache-2.0 license.
# See the LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.

check_bin_unit = check/bin/unit
check_bin_unit_LDADD = \
  $(lib_libhyperledger_fabric_la) \
  $(lib_libwant_la) \
  -ltunitas \
  -lrigging-bench-module \
  $(end)
# Reminder: autotools does not put $(AM_LDFLAGS) into check_bin_unit_LDFLAGS, like it does with CPPFLAGS and CXXFLAGS
check_bin_unit_LDFLAGS = $(CHECK_LDFLAGS_SET)
#(check_bin_unit_OBJECTS) : AM_CPPFLAGS+=$(AND_CHECK_CPPFLAGS_SET)
#(check_bin_unit_OBJECTS) : AM_CXXFLAGS+=$(AND_CHECK_CXXFLAGS_SET)
check_bin_unit_MODULES = $(call TF_SOURCEStoMODULES, $(check_bin_unit_SOURCES))
check_bin_unit_SOURCES = \
  obj/src/tests/unit/main.cpp \
  obj/src/tests/unit/namespace.cpp \
  obj/src/tests/unit/call.Fixture.cpp \
  obj/src/tests/unit/chaincode.Fixture.cpp \
  obj/src/tests/unit/fabric.Fixture.cpp \
  obj/src/tests/unit/fabric.Fixture.Exceptional.cpp \
  obj/src/tests/unit/ip.Fixture.cpp \
  obj/src/tests/unit/ip.host.Fixture.cpp \
  obj/src/tests/unit/orderer.Fixture.cpp \
  obj/src/tests/unit/peer.Fixture.cpp \
  obj/src/tests/unit/peers.Fixture.cpp \
  obj/src/tests/unit/pki.Fixture.cpp \
  obj/src/tests/unit/run.Fixture.cpp \
  obj/src/tests/unit/run.Push_Back.cpp \
  obj/src/tests/unit/run.Loader.cpp \
  obj/src/tests/unit/southside.Fixture.cpp \
  obj/src/tests/unit/tls.Fixture.cpp \
  obj/src/tests/unit/want.Fixture.cpp \
  obj/src/tests/unit/want.filesystem.Fixture.cpp \
  obj/src/tests/unit/want.filesystem.dequote.Fixture.cpp \
  obj/src/tests/unit/want.format.Fixture.cpp \
  obj/src/tests/unit/want.format.dq.Fixture.cpp \
  $(end)
src_tests_unit_want_run_DEPRECATED = \
  obj/src/tests/unit/want.run.Fixture.cpp \
  obj/src/tests/unit/want.run.Fixture.Runner.cpp \
  obj/src/tests/unit/want.run.Fixture.Piped_From.cpp \
  obj/src/tests/unit/want.run.Fixture.Piped_To.cpp \
  $(end)
$(scold_cxxdir)/tests/unit/dependencies.mk: $(check_bin_unit_SOURCES)
$(check_bin_unit_SOURCES) : obj/src/%.cpp : src/%.xcpp
	$(TF_V_DIS) $(call TF_XCPP2CPP, $^)
	$(TF_V_DONE) test -e $@
$(scold_cxxdir)/tests/unit/dependencies.mk:
	$(TF_V_DEP) $(call TF_DEPENDENCIES, $^)
	$(TF_V_DONE) test -e $@
include $(scold_cxxdir)/tests/unit/dependencies.mk
clean-dependencies::
	rm -f $(scold_cxxdir)/tests/unit/dependencies.mk
