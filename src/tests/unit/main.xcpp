// This is -*- c++ -*- nearly C++23 with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <cpp>
#import tests.unit.call.Fixture
#import tests.unit.chaincode.Fixture
#import tests.unit.fabric.Fixture
#import tests.unit.ip.Fixture
#import tests.unit.orderer.Fixture
#import tests.unit.peer.Fixture
#import tests.unit.peers.Fixture
#import tests.unit.pki.Fixture
#import tests.unit.run.Fixture
#import tests.unit.southside.Fixture
#import tests.unit.tls.Fixture
#import tests.unit.want.Fixture
#import rigging.bench.Main
auto main(int argc, char *argv[]) -> int {
  namespace tu = tests::unit;
  rigging::bench::Main remain(tu::call::Fixture::suite(),
                              tu::chaincode::Fixture::suite(),
                              tu::fabric::Fixture::suite(),
                              tu::ip::Fixture::suite(),
                              tu::orderer::Fixture::suite(),
                              tu::peer::Fixture::suite(),
                              tu::peers::Fixture::suite(),
                              tu::pki::Fixture::suite(),
                              tu::run::Fixture::suite(),
                              tu::southside::Fixture::suite(),
                              tu::tls::Fixture::suite(),
			      tu::want::Fixture::suite());
  return remain(argc, argv);
}
#endiv
