// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::peer { class Fixture; }
#endiv
#divert <hpp>
class tests::unit::peer::Fixture : public cppunit::test::Fixture {
public:
  auto test_Contact() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
auto tests::unit::peer::Fixture::test_Contact() -> void {
  // NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO NO
  //
  // The peers.contact (plural "peers") is in a separate Fixture. Go there.
  //
  CPPUNIT_ASSERT(true);
}
auto tests::unit::peer::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"peer"};
  series << call("Contact", &Fixture::test_Contact)
         << END;
  return finalize(series);
}
#endiv
