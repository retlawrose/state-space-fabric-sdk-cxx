// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Yahoo Inc. 2021.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
#include <hpp/tests.unit.fabric.Fixture>
#endiv
#divert <hpp>
#import hyperledger.fabric.exception.Aspect
#import std.runtime_error
#import std.string
class tests::unit::fabric::Fixture::Exceptional : public virtual ::hyperledger::fabric::exception::Aspect, public std::runtime_error {
  struct Ancestors {
    using Aspect = ::hyperledger::fabric::exception::Aspect;
    using Exception = std::runtime_error;
  };
public:
  inline Exceptional(std::string const &reason);
  auto what() const noexcept -> char const * final;
};
#endiv
#divert <ipp>
namespace tests::unit::fabric {
  inline Fixture::Exceptional::Exceptional(std::string const &reason)
    : Ancestors::Exception{reason}
  { }
}
#endiv
#divert <cpp>
namespace tests::unit::fabric {
  auto Fixture::Exceptional::what() const noexcept -> char const * {
    return Ancestors::Exception::what();
  }
}
#endiv
