// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::unit::chaincode { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
struct tests::unit::chaincode::Fixture : public cppunit::test::Fixture {
  auto test_Context() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import hyperledger.fabric.v0.peer.chaincode.Context
auto tests::unit::chaincode::Fixture::test_Context() -> void {
  struct Subject : public ::hyperledger::fabric::v0::peer::chaincode::Context {
  }  subject;
  CPPUNIT_ASSERT(!subject.orderer);
}
#import rigging.suite.io
auto tests::unit::chaincode::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"chaincode"};
  series << call("Context", &Fixture::test_Context)
         << END;
  return finalize(series);
}
#endiv
