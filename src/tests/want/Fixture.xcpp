// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace tests::want { class Fixture; }
#endiv
#divert <hpp>
#import cppunit.Test
#import cppunit.test.Fixture
struct tests::want::Fixture : public cppunit::test::Fixture {
  auto test_Boolean() -> void;
  static auto suite() -> cppunit::Test *;
};
#endiv
#divert <cpp>
#import want.Boolean
auto tests::want::Fixture::test_Boolean() -> void {
  using ::want::Boolean;
  Boolean b0;
  CPPUNIT_ASSERT(false == b0);
  Boolean b1{true};
  CPPUNIT_ASSERT(true == b1);
  Boolean b2;
  b2 = b1;
  CPPUNIT_ASSERT(true == b2);
  b2 = b0;
  CPPUNIT_ASSERT(false == b2);
}
#import rigging.suite.io
auto tests::want::Fixture::suite() -> cppunit::Test * {
  using namespace rigging::suite;
  auto series = Stream{"want"};
  series << call("Boolean", &Fixture::test_Boolean)
         << END;
  return finalize(series);
}
#endiv
