// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace want::enumeration {
  //
  // An abstract category for an enumeration.
  // Descendants only.
  //
  // A category for an enumeration ... to (safely) give a stringy sense to the enumeration
  //                                   to (boldly) go where no one has gone before.
  //
  // Like std::error_category but does not have the dual structure of error_code, error_condition
  // There is just the single level of the enumeration itself.
  // But other than that, it is patterned after std::error_category
  // And its pattern of use is exactly the same.
  //
  // Usage:
  //
  //   auto const &c = category();
  //   auto n = c.name();
  //   auto m = c.message(99);
  //
  class Category;
}
#endiv
#divert <hpp>
#import std.string
class want::enumeration::Category {
protected:
  virtual ~Category() = default;
public:
  virtual auto name() const noexcept -> char const * = 0;
  virtual auto message(int code) const -> std::string = 0;
};
#endiv
