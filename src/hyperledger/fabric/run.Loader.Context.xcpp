// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
#import hyperledger.fabric.run.Loader
#import hyperledger.fabric.Context
namespace hyperledger::fabric::run {
  //
  // The (argument) loader for the generic 'peer' subcommands
  //
  template<> class Loader<fabric::Context>;
}
#endiv
#divert <hpp>
#import hyperledger.fabric.run.Loadable
template<> struct hyperledger::fabric::run::Loader<hyperledger::fabric::Context> : public Loadable {
  using Source = fabric::Context;
protected:
  ~Loader() = default;
  Loader() = default;
  auto load(Arguments &lhs, Source const &rhs) -> void;
};
#endiv
#divert <cpp>
auto hyperledger::fabric::run::Loader<hyperledger::fabric::Context>::load(Arguments &lhs, Source const &rhs) -> void {
#warning WRITETHIS hyperledger::fabric::run::Loader<fabric::Context>::Loader(...)
}
#endiv
