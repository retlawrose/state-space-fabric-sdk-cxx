// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
namespace hyperledger::fabric::v0::peer::chaincode {
  // 
  // The Function is an implementation detail of call(...)
  //                       and its callers (sic) which are query(...) and invoke(...)
  // It is not intended for use beyond that.
  // As such it is declared and supported with a 'namespace packaging'
  //
  // Usage: (e.g.)
  //
  //   namespace packaging::query::function {
  //     using packaging::call::function::call;
  //     using packaging::call::function::QUERY;
  //     ...declarations
  //    }
  //
  namespace packaging::call::function {
    enum Function {
      LIGHT,
      HEAVY,
      QUERY = LIGHT,
      INVOKE = HEAVY,
    };
  }
}
#endiv
#divert <hpp>
#import std.string
namespace hyperledger::fabric::v0::peer::chaincode::packaging::call::function {
  inline auto to_string(Function) -> std::string;
}
#endiv
#divert <ipp>
#import std.runtime_error
auto hyperledger::fabric::v0::peer::chaincode::packaging::call::function::to_string(Function f) -> std::string {
  switch (f) {
    // /opt/hyperledger/fabric/bin/peer chaincode <function>
  case Function::QUERY:  return "query";
  case Function::INVOKE: return "invoke";
  default: throw std::runtime_error{"Function"};
  }
}
#endiv
