// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
#import hyperledger.fabric.run.loader.Compare
#import std.optional
namespace hyperledger::fabric::run::loader {
  template<typename TYPE> struct Compare<std::optional<TYPE>>;
}
#endiv
#divert <hpp>
namespace hyperledger::fabric::run::loader {
  template<typename TYPE> struct Compare<std::optional<TYPE>> {
    using Argument = std::optional<TYPE>;
    using Value = typename Argument::value_type; // New School
    using value_type = Value; //                    old_school
    auto operator()(Argument const &a, Argument const &b) const -> bool;
  };
}
#endiv
#divert <ipp>
namespace hyperledger::fabric::run::loader {
  template<typename TYPE> auto Compare<std::optional<TYPE>>::operator()(Argument const &a, Argument const &b) const -> bool {
    auto const aa = (bool) a;
    auto const bb = (bool) b;
    if (aa != bb) {
      return false;
    } else if (aa == bb) {
      Compare<Value> redo;
      return redo(*a, *b);
    } else {
      return false;
    }
  }
}
#endiv

