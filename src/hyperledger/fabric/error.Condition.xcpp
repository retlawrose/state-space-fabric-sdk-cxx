// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
namespace hyperledger::fabric::error {
  //
  // The (generalized) error conditions
  //
  // Following design of https://en.cppreference.com/w/cpp/error/error_condition
  // See also, nearby the cluster in namespace error { Condition, Code, Category, category }
  //
  enum class Condition { SUCCESS, FAILURE };
}
#import std.is_error_condition_enum
namespace std {
  template<> struct is_error_condition_enum<hyperledger::fabric::error::Condition>;
}
#endiv
#divert <hpp>
#import std.true_type
template<> struct std::is_error_condition_enum<hyperledger::fabric::error::Condition> : public std::true_type { };
#import std.error_condition
namespace hyperledger::fabric::error {
  inline auto make_error_condition(Condition) -> std::error_condition;
}
#endiv
#divert <ipp>
#import hyperledger.fabric.error.category
auto hyperledger::fabric::error::make_error_condition(Condition cond) -> std::error_condition {
  return std::error_condition{(int)cond, category()};
}
#endiv

