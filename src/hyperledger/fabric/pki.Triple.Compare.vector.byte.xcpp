// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright (c) 2019 Verizon Media, Inc.  See the LICENSE statement nearby.
#divert <fpp>
#import hyperledger.fabric.run.loader.Compare
#import std.byte
#import std.vector
namespace hyperledger::fabric::run::loader {
  // A comparator; an implementation detail of the loader subsystem
  template<> struct Compare<std::vector<std::byte>>;
}
#endiv
#divert <hpp>
template<> struct hyperledger::fabric::run::loader::Compare<std::vector<std::byte>> {
  using Argument = std::vector<std::byte>;
  inline auto operator()(Argument const &, Argument const &) const -> bool;
};
#endiv
#divert <ipp>
#import std.equal
auto hyperledger::fabric::run::loader::Compare<std::vector<std::byte>>::operator()(Argument const &a, Argument const &b) const -> bool {
  return a.size() == b.size() && std::equal(a.begin(), a.end(), b.begin(), b.end());
}
#endiv
