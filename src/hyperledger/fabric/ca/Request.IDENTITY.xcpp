// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media.
// The license statement is in the LICENSE file at the top of the repository; this code is licensable under the Apache 2.0 license.
#divert <fpp>
#import hyperledger.fabric.ca.Request.template
namespace hyperledger::fabric::ca {
  //
  // An identity request is the same as an identity query.
  // one means "show me that"
  // the other means "make me that"
  //
  // Usage:
  //
  //   auto main = Service<MAIN>{...somehow...};
  //   auto id = main.api<IDENTITY>();
  //
  //   auto registrar = Package<ENROLLMENT>{...somehow...};
  //   auto request = Request<IDENTITY>{...somehow...};
  //
  //   auto created = id.create(registrar, request);
  //   
  template<> struct Request<IDENTITY>;
}
#endiv
#divert <hpp>
#import hyperledger.fabric.ca.identity.Query
namespace hyperledger::fabric::ca {
  template<> class Request<IDENTITY> : public identity::Query {
    using Ancestor = identity::Query;
  public:
    using Ancestor::Query;
  };
}
#endiv
#divert <cpp>
#import tests.concepts.hyperledger.fabric.ca.request.Constructible
namespace {
  namespace tests {
    using namespace ::tests;
    using namespace concepts::hyperledger::fabric::ca::request;
    using namespace hyperledger::fabric::ca;
    static_assert(Constructible<Request<IDENTITY>>);
  }
}
#endiv
