// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media.
// The license statement is in the LICENSE file at the top of the repository; this code is licensable under the Apache 2.0 license.
#divert <fpp>
namespace hyperledger::fabric::ca::revocation {
  //
  // The packaging of a revocation result.
  // Descendants only; see Package<REVOCATION>
  //
  // Usage:
  //
  //   Package<REVOCATION> gone = revoker.revoke(...arguments...);
  //
  struct Package;
}
#endiv
#divert <hpp>
#import hyperledger.pki.Bundle
#import hyperledger.pki.revocation.Certificates
#import hyperledger.pki.revocation.Names   // n.b. the elision namespace pki = pki::revocation
struct hyperledger::fabric::ca::revocation::Package : public pki::Bundle<pki::Certificates, pki::Names> {
  using Ancestor = pki::Bundle<pki::Certificates, pki::Names>;
protected:
  ~Package() = default;
public:
  Package() = default;
  [[implicit]] Package(pki::Certificates &&c, pki::Names &&n)  : Ancestor{forward<pki::Certificates>(c), forward<pki::Names>(n)} { }
  [[implicit]] Package(Ancestor &&a) : Ancestor{forward<Ancestor>(a)} { }
  Package(Package const &) = delete;
  auto operator=(Package const &) -> Package & = delete;
  Package(Package &&) = default;
  auto operator=(Package &&) -> Package & = delete;
};
#endiv
