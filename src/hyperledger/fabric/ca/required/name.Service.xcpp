// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media.
// The license statement is in the LICENSE file at the top of the repository; this code is licensable under the Apache 2.0 license.
#divert <fpp>
#import std.is_same
#import hyperledger.required.Enumeration
namespace hyperledger::fabric::ca::required::name {
  //
  // Is this enumeration in the universe of Service names?
  //
  namespace [[eponymous]] service {
    using std::is_same_v;
    template<typename MATCH, typename... UNIVERSE> concept bool Fold = (is_same_v<MATCH, UNIVERSE> || ... );
    //                                                                                <----- the universe of available Service<NAME> ----->
    template<typename MATCH> concept bool Service = Enumeration<MATCH> && Fold<MATCH, AFFILIATION, CERTIFICATE, ENROLLMENT, IDENTITY, INFORMATION, MAIN, REGISTRATION, REVOCATION, REVOCATIONS>;
  }
  using service::Service;
}
#endiv
#divert <cpp>
// Of course this is test code
namespace {
  namespace tests {
    using namespace hyperledger::fabric::ca;
    static_assert(required::name::Service<AFFILIATION>);
    static_assert(required::name::Service<CERTIFICATE>);
    static_assert(required::name::Service<ENROLLMENT>);
    static_assert(required::name::Service<IDENTITY>);
    static_assert(required::name::Service<INFORMATION>);
    static_assert(required::name::Service<MAIN>);
    static_assert(required::name::Service<REGISTRATION>);
    static_assert(required::name::Service<REVOCATION>);
    static_assert(required::name::Service<REVOCATIONS>);
  }
}
#endiv
