// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright 2019, Oath Inc.
// Licensed under the terms of the Apache-2.0 license. See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
#import hyperledger.fabric.run.loader.Compare
#import hyperledger.fabric.pki.Triple
namespace hyperledger::fabric::run::loader {
  // A comparator; an implementation detail of the loader subsystem
  template<pki::required::Triplet ITEM> struct Compare<pki::Triple<ITEM>>;
}
#endiv
#divert <hpp>
namespace hyperledger::fabric {
  template<pki::required::Triplet ITEM> struct run::loader::Compare<pki::Triple<ITEM>> {
    using Argument = pki::Triple<ITEM>;
    inline auto operator()(Argument const &, Argument const &) const -> bool;
  };
}
#endiv
#divert <ipp>
namespace hyperledger::fabric {
  template<pki::required::Triplet ITEM> auto run::loader::Compare<pki::Triple<ITEM>>::operator()(Argument const &a, Argument const &b) const -> bool {
    Compare<decltype(a.key)> rekey;
    Compare<decltype(a.crt)> recrt;
    Compare<decltype(a.ca)> reca;
    return rekey(a.key, b.key) && recrt(a.crt, b.crt) && reca(a.ca, b.ca);
  }
}
#endiv
