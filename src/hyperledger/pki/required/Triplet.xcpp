// This is -*- c++ -*- nearly C++2a with Modules TS but in the S.C.O.L.D. stylings that are so popular these days.
// Copyright Verizon Media.
// Licensed under the terms of the Apache-2.0 license.
// See LICENSE file in https://github.com/yahoo/hyperledger-fabric-sdk-c++/blob/master/LICENSE for terms.
#divert <fpp>
#import std.byte
#import std.filesystem.path
#import std.is_same
#import std.optional
#import std.string
#import std.vector
namespace hyperledger::pki::required {
  //
  // The types allowed as an Item in the Triple
  //
  namespace triplet {
    template<typename TYPE> concept bool Decoded = std::is_same<TYPE, std::vector<std::byte>>::value;
    template<typename TYPE> concept bool Encoded = (std::is_same<TYPE, std::string>::value || std::is_same<TYPE, std::vector<char>>::value);
    template<typename TYPE> concept bool Filepath = std::is_same<TYPE, std::filesystem::path>::value;
    template<typename TYPE> concept bool Triplet = Decoded<TYPE> || Encoded<TYPE> || Filepath<TYPE>;
    template<typename OPTIONAL> struct Deoptionalize { using type = void; };
    template<typename TYPE> struct Deoptionalize<std::optional<TYPE>> { using type = TYPE; };
  }
  template<typename TYPE> concept bool Triplet = triplet::Triplet<TYPE> || triplet::Triplet<typename triplet::Deoptionalize<TYPE>::type>;
}
#endiv
