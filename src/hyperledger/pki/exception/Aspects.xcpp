// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media.
// The license statement is in the LICENSE file at the top of the repository; this code is licensable under the Apache 2.0 license.
#divert <fpp>
namespace hyperledger::pki::exception {
  //
  // Blend the aspects together.
  // Descendants only.
  //
  // Concept:
  //
  //   Avoid that pesky compiler warning about ancestor Aspect being ambiguous (who cares?)
  //   Avoid some prodigious copy-pasta.
  //   This class MUST NOT incorporate an actual exception; only a descendant MUST do that.
  //
  // Usage:
  //
  //   throw exception::Algorithm{...somehow...};
  //   throw exception::Deterministic{...somehow...};
  //
  namespace [[eponymous]] aspects {
    struct Hyperledger;
    struct Infrastructure;
    struct Aspects;
  }
  using aspects::Aspects;
}
#endiv
#divert <hpp>
#import hyperledger.exception.Aspect
#import hyperledger.pki.exception.Aspect
namespace hyperledger::pki::exception {
  // Avoid that pesky unsupressable warning about ancestor Aspect being ambiguous
  struct aspects::Hyperledger : public hyperledger::exception::Aspect { };
  struct aspects::Infrastructure : public pki::exception::Aspect { };
  class aspects::Aspects : public Hyperledger,
                           public Infrastructure {
    struct Ancestors {
      using Hyperledger = hyperledger::exception::Aspect;
      using Infrastructure = pki::exception::Aspect;
    };
  protected:
    virtual ~Aspects() = default;
  };
}
#endiv
