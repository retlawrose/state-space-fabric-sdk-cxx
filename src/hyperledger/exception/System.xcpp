// This is C++2a -*- c++ -*- in the S.C.O.L.D. Stylings that are so popular these days
// Copyright Verizon Media.
// The license statement is in the LICENSE file at the top of the repository; this code is licensable under the Apache 2.0 license.
#divert <fpp>
namespace hyperledger::exception {
  //
  // Like a std::system_error but is marked as a hyperledger exception by aspect
  //
  // Works like https://en.cppreference.com/w/cpp/error/system_error
  //
  // Usage:
  //
  //   throw System{99, category(), "reasons"};
  //   throw System{error::Code::NINTEY_NINE, "reasons"};
  //
  class System;
}
#endiv
#divert <hpp>
#import hyperledger.exception.Aspect
#import std.is_error_code_enum
#import std.system_error
#import std.error_category
#import std.string
class hyperledger::exception::System : public Aspect, public std::system_error {
  struct Ancestors {
    using Aspect = hyperledger::exception::Aspect;
    using Exception = std::system_error;
  };
public:
  using Ancestors::Exception::system_error;
  inline explicit System(Ancestors::Exception const &);
  inline explicit System(Ancestors::Exception &&);
  auto what() const noexcept -> char const * override;
};
#endiv
#divert <ipp>
namespace hyperledger::exception {
  System::System(Ancestors::Exception const &previous) : Ancestors::Exception{previous} { }
  System::System(Ancestors::Exception &&previous) : Ancestors::Exception{forward<Ancestors::Exception>(previous)} { }
}
#endiv
#divert <cpp>
auto hyperledger::exception::System::what() const noexcept -> char const * { return Ancestors::Exception::what(); }
#endiv
